//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	matmul_kernel           // -- Begin function matmul_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel
.visible .entry matmul_kernel(
	.param .u64 .ptr .global .align 1 matmul_kernel_param_0,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_1,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5,
	.param .u32 matmul_kernel_param_6,
	.param .u32 matmul_kernel_param_7,
	.param .u32 matmul_kernel_param_8,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_9
)
.reqntid 128
{
	.reg .pred 	%p<140>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<843>;
	.reg .f32 	%f<2191>;
	.reg .b64 	%rd<312>;
	.loc	1 45 0                          // matmul.py:45:0
$L__func_begin0:
	.loc	1 45 0                          // matmul.py:45:0

// %bb.0:
	ld.param.u32 	%r62, [matmul_kernel_param_8];
	ld.param.u32 	%r61, [matmul_kernel_param_7];
	ld.param.u32 	%r60, [matmul_kernel_param_5];
	ld.param.u32 	%r59, [matmul_kernel_param_4];
	ld.param.u32 	%r58, [matmul_kernel_param_3];
	ld.param.u64 	%rd58, [matmul_kernel_param_2];
	ld.param.u64 	%rd57, [matmul_kernel_param_1];
	ld.param.u64 	%rd310, [matmul_kernel_param_0];
$L__tmp0:
	.loc	1 61 24                         // matmul.py:61:24
	mov.u32 	%r223, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r224, %r58, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r225, %r224, 31;
	shr.u32 	%r226, %r225, 25;
	add.s32 	%r227, %r224, %r226;
	shr.s32 	%r228, %r227, 7;
$L__tmp2:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r229, %r59, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r230, %r229, 31;
	shr.u32 	%r231, %r230, 25;
	add.s32 	%r232, %r229, %r231;
	shr.s32 	%r233, %r232, 7;
$L__tmp3:
	.loc	1 64 38                         // matmul.py:64:38
	shl.b32 	%r235, %r233, 3;
	ld.param.u32 	%r236, [matmul_kernel_param_6];
	.loc	1 65 22                         // matmul.py:65:22
	div.s32 	%r237, %r223, %r235;
	.loc	1 66 29                         // matmul.py:66:29
	shl.b32 	%r238, %r237, 3;
	.loc	1 67 35                         // matmul.py:67:35
	sub.s32 	%r239, %r228, %r238;
	.loc	1 67 48                         // matmul.py:67:48
	min.s32 	%r241, %r239, 8;
	.loc	1 68 34                         // matmul.py:68:34
	mul.lo.s32 	%r242, %r237, %r235;
	sub.s32 	%r243, %r223, %r242;
	.loc	1 69 40                         // matmul.py:69:40
	div.s32 	%r244, %r243, %r241;
	.loc	1 68 54                         // matmul.py:68:54
	mul.lo.s32 	%r245, %r244, %r241;
	sub.s32 	%r246, %r243, %r245;
	.loc	1 68 27                         // matmul.py:68:27
	add.s32 	%r247, %r246, %r238;
	.loc	1 71 23                         // matmul.py:71:23
	shl.b32 	%r1, %r247, 7;
	.loc	1 71 51                         // matmul.py:71:51
	mov.u32 	%r2, %tid.x;
	bfe.s32 	%r248, %r2, 3, 1;
	and.b32  	%r4, %r2, 16;
	bfe.s32 	%r249, %r2, 4, 1;
	bfe.s32 	%r250, %r2, 5, 1;
	and.b32  	%r251, %r2, 64;
	bfe.u32 	%r252, %r2, 3, 4;
	and.b32  	%r253, %r2, 1;
	neg.s32 	%r254, %r253;
	shl.b32 	%r255, %r2, 2;
	and.b32  	%r5, %r255, 28;
	and.b32  	%r256, %r255, 124;
	.loc	1 71 38                         // matmul.py:71:38
	or.b32  	%r257, %r1, %r252;
	or.b32  	%r258, %r257, 16;
	or.b32  	%r259, %r257, 32;
	or.b32  	%r260, %r257, 48;
	or.b32  	%r261, %r257, 64;
	or.b32  	%r262, %r257, 80;
	or.b32  	%r263, %r257, 96;
	or.b32  	%r264, %r257, 112;
	.loc	1 71 68                         // matmul.py:71:68
	rem.s32 	%r265, %r257, %r58;
	rem.s32 	%r266, %r258, %r58;
	rem.s32 	%r267, %r259, %r58;
	rem.s32 	%r268, %r260, %r58;
	rem.s32 	%r269, %r261, %r58;
	rem.s32 	%r270, %r262, %r58;
	rem.s32 	%r271, %r263, %r58;
	rem.s32 	%r272, %r264, %r58;
	.loc	1 72 23                         // matmul.py:72:23
	shl.b32 	%r6, %r244, 7;
	.loc	1 72 38                         // matmul.py:72:38
	or.b32  	%r273, %r6, %r256;
	or.b32  	%r274, %r273, 1;
	or.b32  	%r275, %r273, 2;
	or.b32  	%r276, %r273, 3;
	.loc	1 72 68                         // matmul.py:72:68
	rem.s32 	%r7, %r273, %r59;
	rem.s32 	%r8, %r274, %r59;
	rem.s32 	%r9, %r275, %r59;
	rem.s32 	%r10, %r276, %r59;
	.loc	1 74 53                         // matmul.py:74:53
	mad.lo.s32 	%r277, %r265, %r236, %r5;
	mad.lo.s32 	%r278, %r266, %r236, %r5;
	mad.lo.s32 	%r279, %r267, %r236, %r5;
	mad.lo.s32 	%r280, %r268, %r236, %r5;
	mad.lo.s32 	%r281, %r269, %r236, %r5;
	mad.lo.s32 	%r282, %r270, %r236, %r5;
	mad.lo.s32 	%r283, %r271, %r236, %r5;
	mad.lo.s32 	%r284, %r272, %r236, %r5;
	.loc	1 74 22                         // matmul.py:74:22
	mul.wide.s32 	%rd139, %r277, 4;
	add.s64 	%rd59, %rd310, %rd139;
	mul.wide.s32 	%rd140, %r278, 4;
	add.s64 	%rd60, %rd310, %rd140;
	mul.wide.s32 	%rd141, %r279, 4;
	add.s64 	%rd61, %rd310, %rd141;
	mul.wide.s32 	%rd142, %r280, 4;
	add.s64 	%rd62, %rd310, %rd142;
	mul.wide.s32 	%rd143, %r281, 4;
	add.s64 	%rd63, %rd310, %rd143;
	mul.wide.s32 	%rd144, %r282, 4;
	add.s64 	%rd64, %rd310, %rd144;
	mul.wide.s32 	%rd145, %r283, 4;
	add.s64 	%rd65, %rd310, %rd145;
	mul.wide.s32 	%rd146, %r284, 4;
	add.s64 	%rd66, %rd310, %rd146;
	.loc	1 75 29                         // matmul.py:75:29
	bfe.u32 	%r11, %r2, 5, 1;
	shr.u32 	%r12, %r251, 5;
	or.b32  	%r13, %r11, %r12;
	or.b32  	%r14, %r13, 4;
	or.b32  	%r15, %r13, 8;
	or.b32  	%r16, %r13, 12;
	or.b32  	%r17, %r13, 16;
	or.b32  	%r18, %r13, 20;
	or.b32  	%r19, %r13, 24;
	or.b32  	%r20, %r13, 28;
	.loc	1 75 40                         // matmul.py:75:40
	mul.lo.s32 	%r285, %r61, %r13;
	shl.b32 	%r286, %r61, 2;
	add.s32 	%r287, %r285, %r286;
	add.s32 	%r288, %r287, %r286;
	add.s32 	%r289, %r288, %r286;
	add.s32 	%r290, %r289, %r286;
	add.s32 	%r291, %r290, %r286;
	add.s32 	%r292, %r291, %r286;
	add.s32 	%r293, %r292, %r286;
	.loc	1 75 52                         // matmul.py:75:52
	add.s32 	%r294, %r7, %r285;
	add.s32 	%r295, %r8, %r285;
	add.s32 	%r296, %r9, %r285;
	add.s32 	%r297, %r10, %r285;
	add.s32 	%r298, %r7, %r287;
	add.s32 	%r299, %r8, %r287;
	add.s32 	%r300, %r9, %r287;
	add.s32 	%r301, %r10, %r287;
	add.s32 	%r302, %r7, %r288;
	add.s32 	%r303, %r8, %r288;
	add.s32 	%r304, %r9, %r288;
	add.s32 	%r305, %r10, %r288;
	add.s32 	%r306, %r7, %r289;
	add.s32 	%r307, %r8, %r289;
	add.s32 	%r308, %r9, %r289;
	add.s32 	%r309, %r10, %r289;
	add.s32 	%r310, %r7, %r290;
	add.s32 	%r311, %r8, %r290;
	add.s32 	%r312, %r9, %r290;
	add.s32 	%r313, %r10, %r290;
	add.s32 	%r314, %r7, %r291;
	add.s32 	%r315, %r8, %r291;
	add.s32 	%r316, %r9, %r291;
	add.s32 	%r317, %r10, %r291;
	add.s32 	%r318, %r7, %r292;
	add.s32 	%r319, %r8, %r292;
	add.s32 	%r320, %r9, %r292;
	add.s32 	%r321, %r10, %r292;
	add.s32 	%r322, %r7, %r293;
	add.s32 	%r323, %r8, %r293;
	add.s32 	%r324, %r9, %r293;
	add.s32 	%r325, %r10, %r293;
	.loc	1 75 22                         // matmul.py:75:22
	mul.wide.s32 	%rd147, %r294, 4;
	add.s64 	%rd67, %rd57, %rd147;
	mul.wide.s32 	%rd148, %r295, 4;
	add.s64 	%rd68, %rd57, %rd148;
	mul.wide.s32 	%rd149, %r296, 4;
	add.s64 	%rd69, %rd57, %rd149;
	mul.wide.s32 	%rd150, %r297, 4;
	add.s64 	%rd70, %rd57, %rd150;
	mul.wide.s32 	%rd151, %r298, 4;
	add.s64 	%rd71, %rd57, %rd151;
	mul.wide.s32 	%rd152, %r299, 4;
	add.s64 	%rd72, %rd57, %rd152;
	mul.wide.s32 	%rd153, %r300, 4;
	add.s64 	%rd73, %rd57, %rd153;
	mul.wide.s32 	%rd154, %r301, 4;
	add.s64 	%rd74, %rd57, %rd154;
	mul.wide.s32 	%rd155, %r302, 4;
	add.s64 	%rd75, %rd57, %rd155;
	mul.wide.s32 	%rd156, %r303, 4;
	add.s64 	%rd76, %rd57, %rd156;
	mul.wide.s32 	%rd157, %r304, 4;
	add.s64 	%rd77, %rd57, %rd157;
	mul.wide.s32 	%rd158, %r305, 4;
	add.s64 	%rd78, %rd57, %rd158;
	mul.wide.s32 	%rd159, %r306, 4;
	add.s64 	%rd79, %rd57, %rd159;
	mul.wide.s32 	%rd160, %r307, 4;
	add.s64 	%rd80, %rd57, %rd160;
	mul.wide.s32 	%rd161, %r308, 4;
	add.s64 	%rd81, %rd57, %rd161;
	mul.wide.s32 	%rd162, %r309, 4;
	add.s64 	%rd82, %rd57, %rd162;
	mul.wide.s32 	%rd163, %r310, 4;
	add.s64 	%rd83, %rd57, %rd163;
	mul.wide.s32 	%rd164, %r311, 4;
	add.s64 	%rd84, %rd57, %rd164;
	mul.wide.s32 	%rd165, %r312, 4;
	add.s64 	%rd85, %rd57, %rd165;
	mul.wide.s32 	%rd166, %r313, 4;
	add.s64 	%rd86, %rd57, %rd166;
	mul.wide.s32 	%rd167, %r314, 4;
	add.s64 	%rd87, %rd57, %rd167;
	mul.wide.s32 	%rd168, %r315, 4;
	add.s64 	%rd88, %rd57, %rd168;
	mul.wide.s32 	%rd169, %r316, 4;
	add.s64 	%rd89, %rd57, %rd169;
	mul.wide.s32 	%rd170, %r317, 4;
	add.s64 	%rd90, %rd57, %rd170;
	mul.wide.s32 	%rd171, %r318, 4;
	add.s64 	%rd91, %rd57, %rd171;
	mul.wide.s32 	%rd172, %r319, 4;
	add.s64 	%rd92, %rd57, %rd172;
	mul.wide.s32 	%rd173, %r320, 4;
	add.s64 	%rd93, %rd57, %rd173;
	mul.wide.s32 	%rd174, %r321, 4;
	add.s64 	%rd94, %rd57, %rd174;
	mul.wide.s32 	%rd175, %r322, 4;
	add.s64 	%rd95, %rd57, %rd175;
	mul.wide.s32 	%rd176, %r323, 4;
	add.s64 	%rd96, %rd57, %rd176;
	mul.wide.s32 	%rd177, %r324, 4;
	add.s64 	%rd97, %rd57, %rd177;
	mul.wide.s32 	%rd178, %r325, 4;
	add.s64 	%rd98, %rd57, %rd178;
$L__tmp4:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r326, %r60, 31;
$L__tmp5:
	.loc	1 87 33                         // matmul.py:87:33
	shl.b32 	%r330, %r61, 5;
	.loc	1 78 22                         // matmul.py:78:22
	setp.lt.s32 	%p1, %r326, 32;
	setp.gt.s32 	%p2, %r326, 31;
	.loc	1 81 51                         // matmul.py:81:51
	setp.lt.s32 	%p3, %r5, %r60;
	.loc	1 81 20                         // matmul.py:81:20
	and.b32  	%r331, %r248, 36;
	and.b32  	%r332, %r249, 72;
	and.b32  	%r333, %r250, 144;
	or.b32  	%r334, %r332, %r331;
	xor.b32  	%r335, %r334, %r5;
	xor.b32  	%r336, %r335, %r333;
	shl.b32 	%r337, %r251, 2;
	or.b32  	%r22, %r336, %r337;
	shl.b32 	%r338, %r22, 2;
	mov.u32 	%r339, global_smem;
	add.s32 	%r63, %r339, %r338;
	or.b32  	%r340, %r5, 512;
	xor.b32  	%r341, %r334, %r340;
	xor.b32  	%r342, %r341, %r333;
	or.b32  	%r23, %r342, %r337;
	shl.b32 	%r343, %r23, 2;
	add.s32 	%r65, %r339, %r343;
	or.b32  	%r344, %r5, 1024;
	xor.b32  	%r345, %r334, %r344;
	xor.b32  	%r346, %r345, %r333;
	or.b32  	%r24, %r346, %r337;
	shl.b32 	%r347, %r24, 2;
	add.s32 	%r67, %r339, %r347;
	or.b32  	%r348, %r5, 1536;
	xor.b32  	%r349, %r334, %r348;
	xor.b32  	%r350, %r349, %r333;
	or.b32  	%r25, %r350, %r337;
	shl.b32 	%r351, %r25, 2;
	add.s32 	%r69, %r339, %r351;
	or.b32  	%r352, %r5, 2048;
	xor.b32  	%r353, %r334, %r352;
	xor.b32  	%r354, %r353, %r333;
	or.b32  	%r26, %r354, %r337;
	shl.b32 	%r355, %r26, 2;
	add.s32 	%r71, %r339, %r355;
	or.b32  	%r356, %r5, 2560;
	xor.b32  	%r357, %r334, %r356;
	xor.b32  	%r358, %r357, %r333;
	or.b32  	%r27, %r358, %r337;
	shl.b32 	%r359, %r27, 2;
	add.s32 	%r73, %r339, %r359;
	or.b32  	%r360, %r5, 3072;
	xor.b32  	%r361, %r334, %r360;
	xor.b32  	%r362, %r361, %r333;
	or.b32  	%r28, %r362, %r337;
	shl.b32 	%r363, %r28, 2;
	add.s32 	%r75, %r339, %r363;
	or.b32  	%r364, %r5, 3584;
	xor.b32  	%r365, %r334, %r364;
	xor.b32  	%r366, %r365, %r333;
	or.b32  	%r29, %r366, %r337;
	shl.b32 	%r367, %r29, 2;
	add.s32 	%r77, %r339, %r367;
	selp.b32 	%r368, 16, 0, %p2;
	selp.b32 	%r66, %r368, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r63 + 0 ], [ %rd59 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r65 + 0 ], [ %rd60 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r67 + 0 ], [ %rd61 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r69 + 0 ], [ %rd62 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r71 + 0 ], [ %rd63 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r73 + 0 ], [ %rd64 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r75 + 0 ], [ %rd65 + 0 ], 0x10, %r66;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r77 + 0 ], [ %rd66 + 0 ], 0x10, %r66;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 51                         // matmul.py:82:51
	setp.lt.s32 	%p4, %r13, %r60;
	setp.lt.s32 	%p5, %r14, %r60;
	setp.lt.s32 	%p6, %r15, %r60;
	setp.lt.s32 	%p7, %r16, %r60;
	setp.lt.s32 	%p8, %r17, %r60;
	setp.lt.s32 	%p9, %r18, %r60;
	setp.lt.s32 	%p10, %r19, %r60;
	setp.lt.s32 	%p11, %r20, %r60;
	.loc	1 82 20                         // matmul.py:82:20
	and.b32  	%r369, %r254, 144;
	shl.b32 	%r370, %r2, 7;
	and.b32  	%r371, %r370, 768;
	or.b32  	%r372, %r371, %r369;
	and.b32  	%r373, %r2, 24;
	shl.b32 	%r374, %r373, 7;
	or.b32  	%r375, %r374, %r372;
	or.b32  	%r376, %r375, %r11;
	or.b32  	%r30, %r376, %r12;
	shl.b32 	%r377, %r30, 2;
	add.s32 	%r378, %r339, 49152;
	add.s32 	%r79, %r378, %r377;
	or.b32  	%r31, %r13, %r375;
	shl.b32 	%r379, %r31, 2;
	add.s32 	%r380, %r378, %r379;
	add.s32 	%r81, %r380, 144;
	add.s32 	%r83, %r380, 288;
	add.s32 	%r85, %r380, 432;
	add.s32 	%r87, %r380, 16;
	add.s32 	%r89, %r380, 128;
	add.s32 	%r91, %r380, 304;
	add.s32 	%r93, %r380, 416;
	add.s32 	%r95, %r380, 32;
	add.s32 	%r97, %r380, 176;
	add.s32 	%r99, %r380, 256;
	add.s32 	%r101, %r380, 400;
	add.s32 	%r103, %r380, 48;
	add.s32 	%r105, %r380, 160;
	add.s32 	%r107, %r380, 272;
	add.s32 	%r109, %r380, 384;
	xor.b32  	%r32, %r30, 16;
	shl.b32 	%r381, %r32, 2;
	add.s32 	%r111, %r378, %r381;
	xor.b32  	%r33, %r30, 52;
	shl.b32 	%r382, %r33, 2;
	add.s32 	%r113, %r378, %r382;
	xor.b32  	%r34, %r30, 88;
	shl.b32 	%r383, %r34, 2;
	add.s32 	%r115, %r378, %r383;
	xor.b32  	%r35, %r30, 124;
	shl.b32 	%r384, %r35, 2;
	add.s32 	%r117, %r378, %r384;
	xor.b32  	%r36, %r30, 20;
	shl.b32 	%r385, %r36, 2;
	add.s32 	%r119, %r378, %r385;
	xor.b32  	%r37, %r30, 48;
	shl.b32 	%r386, %r37, 2;
	add.s32 	%r121, %r378, %r386;
	xor.b32  	%r38, %r30, 92;
	shl.b32 	%r387, %r38, 2;
	add.s32 	%r123, %r378, %r387;
	xor.b32  	%r39, %r30, 120;
	shl.b32 	%r388, %r39, 2;
	add.s32 	%r125, %r378, %r388;
	xor.b32  	%r40, %r30, 24;
	shl.b32 	%r389, %r40, 2;
	add.s32 	%r127, %r378, %r389;
	xor.b32  	%r41, %r30, 60;
	shl.b32 	%r390, %r41, 2;
	add.s32 	%r129, %r378, %r390;
	xor.b32  	%r42, %r30, 80;
	shl.b32 	%r391, %r42, 2;
	add.s32 	%r131, %r378, %r391;
	xor.b32  	%r43, %r30, 116;
	shl.b32 	%r392, %r43, 2;
	add.s32 	%r133, %r378, %r392;
	xor.b32  	%r44, %r30, 28;
	shl.b32 	%r393, %r44, 2;
	add.s32 	%r135, %r378, %r393;
	xor.b32  	%r45, %r30, 56;
	shl.b32 	%r394, %r45, 2;
	add.s32 	%r137, %r378, %r394;
	xor.b32  	%r46, %r30, 84;
	shl.b32 	%r395, %r46, 2;
	add.s32 	%r139, %r378, %r395;
	xor.b32  	%r47, %r30, 112;
	shl.b32 	%r396, %r47, 2;
	add.s32 	%r141, %r378, %r396;
	selp.b32 	%r397, 4, 0, %p2;
	selp.b32 	%r82, %r397, 0, %p4;
	// begin inline asm
	cp.async.ca.shared.global [ %r79 + 0 ], [ %rd67 + 0 ], 0x4, %r82;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r81 + 0 ], [ %rd68 + 0 ], 0x4, %r82;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r83 + 0 ], [ %rd69 + 0 ], 0x4, %r82;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r85 + 0 ], [ %rd70 + 0 ], 0x4, %r82;
	// end inline asm
	selp.b32 	%r90, %r397, 0, %p5;
	// begin inline asm
	cp.async.ca.shared.global [ %r87 + 0 ], [ %rd71 + 0 ], 0x4, %r90;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r89 + 0 ], [ %rd72 + 0 ], 0x4, %r90;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r91 + 0 ], [ %rd73 + 0 ], 0x4, %r90;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r93 + 0 ], [ %rd74 + 0 ], 0x4, %r90;
	// end inline asm
	selp.b32 	%r98, %r397, 0, %p6;
	// begin inline asm
	cp.async.ca.shared.global [ %r95 + 0 ], [ %rd75 + 0 ], 0x4, %r98;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r97 + 0 ], [ %rd76 + 0 ], 0x4, %r98;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r99 + 0 ], [ %rd77 + 0 ], 0x4, %r98;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r101 + 0 ], [ %rd78 + 0 ], 0x4, %r98;
	// end inline asm
	selp.b32 	%r106, %r397, 0, %p7;
	// begin inline asm
	cp.async.ca.shared.global [ %r103 + 0 ], [ %rd79 + 0 ], 0x4, %r106;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r105 + 0 ], [ %rd80 + 0 ], 0x4, %r106;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r107 + 0 ], [ %rd81 + 0 ], 0x4, %r106;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r109 + 0 ], [ %rd82 + 0 ], 0x4, %r106;
	// end inline asm
	selp.b32 	%r114, %r397, 0, %p8;
	// begin inline asm
	cp.async.ca.shared.global [ %r111 + 0 ], [ %rd83 + 0 ], 0x4, %r114;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r113 + 0 ], [ %rd84 + 0 ], 0x4, %r114;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r115 + 0 ], [ %rd85 + 0 ], 0x4, %r114;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r117 + 0 ], [ %rd86 + 0 ], 0x4, %r114;
	// end inline asm
	selp.b32 	%r122, %r397, 0, %p9;
	// begin inline asm
	cp.async.ca.shared.global [ %r119 + 0 ], [ %rd87 + 0 ], 0x4, %r122;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r121 + 0 ], [ %rd88 + 0 ], 0x4, %r122;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r123 + 0 ], [ %rd89 + 0 ], 0x4, %r122;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r125 + 0 ], [ %rd90 + 0 ], 0x4, %r122;
	// end inline asm
	selp.b32 	%r130, %r397, 0, %p10;
	// begin inline asm
	cp.async.ca.shared.global [ %r127 + 0 ], [ %rd91 + 0 ], 0x4, %r130;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r129 + 0 ], [ %rd92 + 0 ], 0x4, %r130;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r131 + 0 ], [ %rd93 + 0 ], 0x4, %r130;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r133 + 0 ], [ %rd94 + 0 ], 0x4, %r130;
	// end inline asm
	selp.b32 	%r138, %r397, 0, %p11;
	// begin inline asm
	cp.async.ca.shared.global [ %r135 + 0 ], [ %rd95 + 0 ], 0x4, %r138;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r137 + 0 ], [ %rd96 + 0 ], 0x4, %r138;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r139 + 0 ], [ %rd97 + 0 ], 0x4, %r138;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r141 + 0 ], [ %rd98 + 0 ], 0x4, %r138;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 22                         // matmul.py:78:22
	setp.gt.s32 	%p12, %r326, 63;
	.loc	1 86 18                         // matmul.py:86:18
	add.s64 	%rd99, %rd59, 128;
	add.s64 	%rd100, %rd60, 128;
	add.s64 	%rd101, %rd61, 128;
	add.s64 	%rd102, %rd62, 128;
	add.s64 	%rd103, %rd63, 128;
	add.s64 	%rd104, %rd64, 128;
	add.s64 	%rd105, %rd65, 128;
	add.s64 	%rd106, %rd66, 128;
	.loc	1 87 18                         // matmul.py:87:18
	mul.wide.s32 	%rd179, %r330, 4;
	add.s64 	%rd107, %rd67, %rd179;
	add.s64 	%rd108, %rd68, %rd179;
	add.s64 	%rd109, %rd69, %rd179;
	add.s64 	%rd110, %rd70, %rd179;
	add.s64 	%rd111, %rd71, %rd179;
	add.s64 	%rd112, %rd72, %rd179;
	add.s64 	%rd113, %rd73, %rd179;
	add.s64 	%rd114, %rd74, %rd179;
	add.s64 	%rd115, %rd75, %rd179;
	add.s64 	%rd116, %rd76, %rd179;
	add.s64 	%rd117, %rd77, %rd179;
	add.s64 	%rd118, %rd78, %rd179;
	add.s64 	%rd119, %rd79, %rd179;
	add.s64 	%rd120, %rd80, %rd179;
	add.s64 	%rd121, %rd81, %rd179;
	add.s64 	%rd122, %rd82, %rd179;
	add.s64 	%rd123, %rd83, %rd179;
	add.s64 	%rd124, %rd84, %rd179;
	add.s64 	%rd125, %rd85, %rd179;
	add.s64 	%rd126, %rd86, %rd179;
	add.s64 	%rd127, %rd87, %rd179;
	add.s64 	%rd128, %rd88, %rd179;
	add.s64 	%rd129, %rd89, %rd179;
	add.s64 	%rd130, %rd90, %rd179;
	add.s64 	%rd131, %rd91, %rd179;
	add.s64 	%rd132, %rd92, %rd179;
	add.s64 	%rd133, %rd93, %rd179;
	add.s64 	%rd134, %rd94, %rd179;
	add.s64 	%rd135, %rd95, %rd179;
	add.s64 	%rd136, %rd96, %rd179;
	add.s64 	%rd137, %rd97, %rd179;
	add.s64 	%rd138, %rd98, %rd179;
	.loc	1 81 55                         // matmul.py:81:55
	add.s32 	%r398, %r60, -32;
	.loc	1 81 51                         // matmul.py:81:51
	setp.lt.s32 	%p13, %r5, %r398;
	.loc	1 81 20                         // matmul.py:81:20
	bar.sync 	0;
	add.s32 	%r399, %r339, 16384;
	add.s32 	%r143, %r399, %r338;
	add.s32 	%r145, %r399, %r343;
	add.s32 	%r147, %r399, %r347;
	add.s32 	%r149, %r399, %r351;
	add.s32 	%r151, %r399, %r355;
	add.s32 	%r153, %r399, %r359;
	add.s32 	%r155, %r399, %r363;
	add.s32 	%r157, %r399, %r367;
	selp.b32 	%r400, 16, 0, %p13;
	selp.b32 	%r146, %r400, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r143 + 0 ], [ %rd99 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r145 + 0 ], [ %rd100 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r147 + 0 ], [ %rd101 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r149 + 0 ], [ %rd102 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r151 + 0 ], [ %rd103 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r153 + 0 ], [ %rd104 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r155 + 0 ], [ %rd105 + 0 ], 0x10, %r146;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r157 + 0 ], [ %rd106 + 0 ], 0x10, %r146;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 51                         // matmul.py:82:51
	setp.lt.s32 	%p14, %r13, %r398;
	setp.lt.s32 	%p15, %r14, %r398;
	setp.lt.s32 	%p16, %r15, %r398;
	setp.lt.s32 	%p17, %r16, %r398;
	setp.lt.s32 	%p18, %r17, %r398;
	setp.lt.s32 	%p19, %r18, %r398;
	setp.lt.s32 	%p20, %r19, %r398;
	setp.lt.s32 	%p21, %r20, %r398;
	.loc	1 82 20                         // matmul.py:82:20
	add.s32 	%r401, %r339, 65536;
	add.s32 	%r159, %r401, %r377;
	add.s32 	%r402, %r401, %r379;
	add.s32 	%r161, %r402, 144;
	add.s32 	%r163, %r402, 288;
	add.s32 	%r165, %r402, 432;
	add.s32 	%r167, %r402, 16;
	add.s32 	%r169, %r402, 128;
	add.s32 	%r171, %r402, 304;
	add.s32 	%r173, %r402, 416;
	add.s32 	%r175, %r402, 32;
	add.s32 	%r177, %r402, 176;
	add.s32 	%r179, %r402, 256;
	add.s32 	%r181, %r402, 400;
	add.s32 	%r183, %r402, 48;
	add.s32 	%r185, %r402, 160;
	add.s32 	%r187, %r402, 272;
	add.s32 	%r189, %r402, 384;
	add.s32 	%r191, %r401, %r381;
	add.s32 	%r193, %r401, %r382;
	add.s32 	%r195, %r401, %r383;
	add.s32 	%r197, %r401, %r384;
	add.s32 	%r199, %r401, %r385;
	add.s32 	%r201, %r401, %r386;
	add.s32 	%r203, %r401, %r387;
	add.s32 	%r205, %r401, %r388;
	add.s32 	%r207, %r401, %r389;
	add.s32 	%r209, %r401, %r390;
	add.s32 	%r211, %r401, %r391;
	add.s32 	%r213, %r401, %r392;
	add.s32 	%r215, %r401, %r393;
	add.s32 	%r217, %r401, %r394;
	add.s32 	%r219, %r401, %r395;
	add.s32 	%r221, %r401, %r396;
	selp.b32 	%r403, 4, 0, %p14;
	selp.b32 	%r162, %r403, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r159 + 0 ], [ %rd107 + 0 ], 0x4, %r162;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r161 + 0 ], [ %rd108 + 0 ], 0x4, %r162;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r163 + 0 ], [ %rd109 + 0 ], 0x4, %r162;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r165 + 0 ], [ %rd110 + 0 ], 0x4, %r162;
	// end inline asm
	selp.b32 	%r404, 4, 0, %p15;
	selp.b32 	%r170, %r404, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r167 + 0 ], [ %rd111 + 0 ], 0x4, %r170;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r169 + 0 ], [ %rd112 + 0 ], 0x4, %r170;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r171 + 0 ], [ %rd113 + 0 ], 0x4, %r170;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r173 + 0 ], [ %rd114 + 0 ], 0x4, %r170;
	// end inline asm
	selp.b32 	%r405, 4, 0, %p16;
	selp.b32 	%r178, %r405, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r175 + 0 ], [ %rd115 + 0 ], 0x4, %r178;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r177 + 0 ], [ %rd116 + 0 ], 0x4, %r178;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r179 + 0 ], [ %rd117 + 0 ], 0x4, %r178;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r181 + 0 ], [ %rd118 + 0 ], 0x4, %r178;
	// end inline asm
	selp.b32 	%r406, 4, 0, %p17;
	selp.b32 	%r186, %r406, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r183 + 0 ], [ %rd119 + 0 ], 0x4, %r186;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r185 + 0 ], [ %rd120 + 0 ], 0x4, %r186;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r187 + 0 ], [ %rd121 + 0 ], 0x4, %r186;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r189 + 0 ], [ %rd122 + 0 ], 0x4, %r186;
	// end inline asm
	selp.b32 	%r407, 4, 0, %p18;
	selp.b32 	%r194, %r407, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r191 + 0 ], [ %rd123 + 0 ], 0x4, %r194;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r193 + 0 ], [ %rd124 + 0 ], 0x4, %r194;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r195 + 0 ], [ %rd125 + 0 ], 0x4, %r194;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r197 + 0 ], [ %rd126 + 0 ], 0x4, %r194;
	// end inline asm
	selp.b32 	%r408, 4, 0, %p19;
	selp.b32 	%r202, %r408, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r199 + 0 ], [ %rd127 + 0 ], 0x4, %r202;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r201 + 0 ], [ %rd128 + 0 ], 0x4, %r202;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r203 + 0 ], [ %rd129 + 0 ], 0x4, %r202;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r205 + 0 ], [ %rd130 + 0 ], 0x4, %r202;
	// end inline asm
	selp.b32 	%r409, 4, 0, %p20;
	selp.b32 	%r210, %r409, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r207 + 0 ], [ %rd131 + 0 ], 0x4, %r210;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r209 + 0 ], [ %rd132 + 0 ], 0x4, %r210;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r211 + 0 ], [ %rd133 + 0 ], 0x4, %r210;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r213 + 0 ], [ %rd134 + 0 ], 0x4, %r210;
	// end inline asm
	selp.b32 	%r410, 4, 0, %p21;
	selp.b32 	%r218, %r410, 0, %p12;
	// begin inline asm
	cp.async.ca.shared.global [ %r215 + 0 ], [ %rd135 + 0 ], 0x4, %r218;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r217 + 0 ], [ %rd136 + 0 ], 0x4, %r218;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r219 + 0 ], [ %rd137 + 0 ], 0x4, %r218;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r221 + 0 ], [ %rd138 + 0 ], 0x4, %r218;
	// end inline asm
	cp.async.commit_group;
	mov.f32 	%f1935, 0f00000000;
	mov.f32 	%f1936, %f1935;
	mov.f32 	%f1937, %f1935;
	mov.f32 	%f1938, %f1935;
	mov.f32 	%f1939, %f1935;
	mov.f32 	%f1940, %f1935;
	mov.f32 	%f1941, %f1935;
	mov.f32 	%f1942, %f1935;
	mov.f32 	%f1943, %f1935;
	mov.f32 	%f1944, %f1935;
	mov.f32 	%f1945, %f1935;
	mov.f32 	%f1946, %f1935;
	mov.f32 	%f1947, %f1935;
	mov.f32 	%f1948, %f1935;
	mov.f32 	%f1949, %f1935;
	mov.f32 	%f1950, %f1935;
	mov.f32 	%f1951, %f1935;
	mov.f32 	%f1952, %f1935;
	mov.f32 	%f1953, %f1935;
	mov.f32 	%f1954, %f1935;
	mov.f32 	%f1955, %f1935;
	mov.f32 	%f1956, %f1935;
	mov.f32 	%f1957, %f1935;
	mov.f32 	%f1958, %f1935;
	mov.f32 	%f1959, %f1935;
	mov.f32 	%f1960, %f1935;
	mov.f32 	%f1961, %f1935;
	mov.f32 	%f1962, %f1935;
	mov.f32 	%f1963, %f1935;
	mov.f32 	%f1964, %f1935;
	mov.f32 	%f1965, %f1935;
	mov.f32 	%f1966, %f1935;
	mov.f32 	%f1967, %f1935;
	mov.f32 	%f1968, %f1935;
	mov.f32 	%f1969, %f1935;
	mov.f32 	%f1970, %f1935;
	mov.f32 	%f1971, %f1935;
	mov.f32 	%f1972, %f1935;
	mov.f32 	%f1973, %f1935;
	mov.f32 	%f1974, %f1935;
	mov.f32 	%f1975, %f1935;
	mov.f32 	%f1976, %f1935;
	mov.f32 	%f1977, %f1935;
	mov.f32 	%f1978, %f1935;
	mov.f32 	%f1979, %f1935;
	mov.f32 	%f1980, %f1935;
	mov.f32 	%f1981, %f1935;
	mov.f32 	%f1982, %f1935;
	mov.f32 	%f1983, %f1935;
	mov.f32 	%f1984, %f1935;
	mov.f32 	%f1985, %f1935;
	mov.f32 	%f1986, %f1935;
	mov.f32 	%f1987, %f1935;
	mov.f32 	%f1988, %f1935;
	mov.f32 	%f1989, %f1935;
	mov.f32 	%f1990, %f1935;
	mov.f32 	%f1991, %f1935;
	mov.f32 	%f1992, %f1935;
	mov.f32 	%f1993, %f1935;
	mov.f32 	%f1994, %f1935;
	mov.f32 	%f1995, %f1935;
	mov.f32 	%f1996, %f1935;
	mov.f32 	%f1997, %f1935;
	mov.f32 	%f1998, %f1935;
	mov.f32 	%f1999, %f1935;
	mov.f32 	%f2000, %f1935;
	mov.f32 	%f2001, %f1935;
	mov.f32 	%f2002, %f1935;
	mov.f32 	%f2003, %f1935;
	mov.f32 	%f2004, %f1935;
	mov.f32 	%f2005, %f1935;
	mov.f32 	%f2006, %f1935;
	mov.f32 	%f2007, %f1935;
	mov.f32 	%f2008, %f1935;
	mov.f32 	%f2009, %f1935;
	mov.f32 	%f2010, %f1935;
	mov.f32 	%f2011, %f1935;
	mov.f32 	%f2012, %f1935;
	mov.f32 	%f2013, %f1935;
	mov.f32 	%f2014, %f1935;
	mov.f32 	%f2015, %f1935;
	mov.f32 	%f2016, %f1935;
	mov.f32 	%f2017, %f1935;
	mov.f32 	%f2018, %f1935;
	mov.f32 	%f2019, %f1935;
	mov.f32 	%f2020, %f1935;
	mov.f32 	%f2021, %f1935;
	mov.f32 	%f2022, %f1935;
	mov.f32 	%f2023, %f1935;
	mov.f32 	%f2024, %f1935;
	mov.f32 	%f2025, %f1935;
	mov.f32 	%f2026, %f1935;
	mov.f32 	%f2027, %f1935;
	mov.f32 	%f2028, %f1935;
	mov.f32 	%f2029, %f1935;
	mov.f32 	%f2030, %f1935;
	mov.f32 	%f2031, %f1935;
	mov.f32 	%f2032, %f1935;
	mov.f32 	%f2033, %f1935;
	mov.f32 	%f2034, %f1935;
	mov.f32 	%f2035, %f1935;
	mov.f32 	%f2036, %f1935;
	mov.f32 	%f2037, %f1935;
	mov.f32 	%f2038, %f1935;
	mov.f32 	%f2039, %f1935;
	mov.f32 	%f2040, %f1935;
	mov.f32 	%f2041, %f1935;
	mov.f32 	%f2042, %f1935;
	mov.f32 	%f2043, %f1935;
	mov.f32 	%f2044, %f1935;
	mov.f32 	%f2045, %f1935;
	mov.f32 	%f2046, %f1935;
	mov.f32 	%f2047, %f1935;
	mov.f32 	%f2048, %f1935;
	mov.f32 	%f2049, %f1935;
	mov.f32 	%f2050, %f1935;
	mov.f32 	%f2051, %f1935;
	mov.f32 	%f2052, %f1935;
	mov.f32 	%f2053, %f1935;
	mov.f32 	%f2054, %f1935;
	mov.f32 	%f2055, %f1935;
	mov.f32 	%f2056, %f1935;
	mov.f32 	%f2057, %f1935;
	mov.f32 	%f2058, %f1935;
	mov.f32 	%f2059, %f1935;
	mov.f32 	%f2060, %f1935;
	mov.f32 	%f2061, %f1935;
	mov.f32 	%f2062, %f1935;
	.loc	1 78 22                         // matmul.py:78:22
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 22                          // matmul.py:0:22
	shr.u32 	%r3, %r2, 5;
	cvt.s64.s32 	%rd1, %r277;
	cvt.s64.s32 	%rd2, %r278;
	cvt.s64.s32 	%rd3, %r279;
	cvt.s64.s32 	%rd4, %r280;
	cvt.s64.s32 	%rd5, %r281;
	cvt.s64.s32 	%rd6, %r282;
	cvt.s64.s32 	%rd7, %r283;
	cvt.s64.s32 	%rd8, %r284;
	shr.s32 	%r327, %r326, 31;
	shr.u32 	%r328, %r327, 27;
	add.s32 	%r329, %r326, %r328;
	shr.s32 	%r21, %r329, 5;
	cvt.s64.s32 	%rd9, %r330;
	add.s32 	%r48, %r21, -2;
	add.s32 	%r839, %r60, -64;
	.loc	1 78 22                         // matmul.py:78:22
	add.s32 	%r414, %r12, %r11;
	add.s32 	%r415, %r414, 28;
	mul.lo.s32 	%r416, %r61, %r415;
	add.s32 	%r417, %r10, %r416;
	mul.wide.s32 	%rd10, %r417, 4;
	shl.b64 	%rd180, %rd9, 3;
	add.s64 	%rd311, %rd57, %rd180;
	shl.b64 	%rd12, %rd9, 2;
	add.s32 	%r418, %r9, %r416;
	mul.wide.s32 	%rd13, %r418, 4;
	add.s32 	%r419, %r8, %r416;
	mul.wide.s32 	%rd14, %r419, 4;
	add.s32 	%r420, %r7, %r416;
	mul.wide.s32 	%rd15, %r420, 4;
	or.b32  	%r421, %r414, 24;
	mul.lo.s32 	%r422, %r61, %r421;
	add.s32 	%r423, %r10, %r422;
	mul.wide.s32 	%rd16, %r423, 4;
	add.s32 	%r424, %r9, %r422;
	mul.wide.s32 	%rd17, %r424, 4;
	add.s32 	%r425, %r8, %r422;
	mul.wide.s32 	%rd18, %r425, 4;
	add.s32 	%r426, %r7, %r422;
	mul.wide.s32 	%rd19, %r426, 4;
	add.s32 	%r427, %r414, 20;
	mul.lo.s32 	%r428, %r61, %r427;
	add.s32 	%r429, %r10, %r428;
	mul.wide.s32 	%rd20, %r429, 4;
	add.s32 	%r430, %r9, %r428;
	mul.wide.s32 	%rd21, %r430, 4;
	add.s32 	%r431, %r8, %r428;
	mul.wide.s32 	%rd22, %r431, 4;
	add.s32 	%r432, %r7, %r428;
	mul.wide.s32 	%rd23, %r432, 4;
	or.b32  	%r433, %r414, 16;
	mul.lo.s32 	%r434, %r61, %r433;
	add.s32 	%r435, %r10, %r434;
	mul.wide.s32 	%rd24, %r435, 4;
	add.s32 	%r436, %r9, %r434;
	mul.wide.s32 	%rd25, %r436, 4;
	add.s32 	%r437, %r8, %r434;
	mul.wide.s32 	%rd26, %r437, 4;
	add.s32 	%r438, %r7, %r434;
	mul.wide.s32 	%rd27, %r438, 4;
	add.s32 	%r439, %r414, 12;
	mul.lo.s32 	%r440, %r61, %r439;
	add.s32 	%r441, %r10, %r440;
	mul.wide.s32 	%rd28, %r441, 4;
	add.s32 	%r442, %r9, %r440;
	mul.wide.s32 	%rd29, %r442, 4;
	add.s32 	%r443, %r8, %r440;
	mul.wide.s32 	%rd30, %r443, 4;
	add.s32 	%r444, %r7, %r440;
	mul.wide.s32 	%rd31, %r444, 4;
	or.b32  	%r445, %r414, 8;
	mul.lo.s32 	%r446, %r61, %r445;
	add.s32 	%r447, %r10, %r446;
	mul.wide.s32 	%rd32, %r447, 4;
	add.s32 	%r448, %r9, %r446;
	mul.wide.s32 	%rd33, %r448, 4;
	add.s32 	%r449, %r8, %r446;
	mul.wide.s32 	%rd34, %r449, 4;
	add.s32 	%r450, %r7, %r446;
	mul.wide.s32 	%rd35, %r450, 4;
	add.s32 	%r451, %r414, 4;
	mul.lo.s32 	%r452, %r61, %r451;
	add.s32 	%r453, %r10, %r452;
	mul.wide.s32 	%rd36, %r453, 4;
	add.s32 	%r454, %r9, %r452;
	mul.wide.s32 	%rd37, %r454, 4;
	add.s32 	%r455, %r8, %r452;
	mul.wide.s32 	%rd38, %r455, 4;
	add.s32 	%r456, %r7, %r452;
	mul.wide.s32 	%rd39, %r456, 4;
	mul.lo.s32 	%r457, %r61, %r414;
	add.s32 	%r458, %r10, %r457;
	mul.wide.s32 	%rd40, %r458, 4;
	add.s32 	%r459, %r9, %r457;
	mul.wide.s32 	%rd41, %r459, 4;
	add.s32 	%r460, %r8, %r457;
	mul.wide.s32 	%rd42, %r460, 4;
	add.s32 	%r461, %r7, %r457;
	mul.wide.s32 	%rd43, %r461, 4;
	shl.b64 	%rd181, %rd8, 2;
	add.s64 	%rd44, %rd181, 256;
	shl.b64 	%rd182, %rd7, 2;
	add.s64 	%rd45, %rd182, 256;
	shl.b64 	%rd183, %rd6, 2;
	add.s64 	%rd46, %rd183, 256;
	shl.b64 	%rd184, %rd5, 2;
	add.s64 	%rd47, %rd184, 256;
	shl.b64 	%rd185, %rd4, 2;
	add.s64 	%rd48, %rd185, 256;
	shl.b64 	%rd186, %rd3, 2;
	add.s64 	%rd49, %rd186, 256;
	shl.b64 	%rd187, %rd2, 2;
	add.s64 	%rd50, %rd187, 256;
	shl.b64 	%rd188, %rd1, 2;
	add.s64 	%rd51, %rd188, 256;
	mov.b32 	%r842, 0;
	mov.f32 	%f1674, 0f00000000;
	mov.b32 	%r841, 1;
	mov.b32 	%r840, -1;
	mov.f32 	%f1935, %f1674;
	mov.f32 	%f1936, %f1674;
	mov.f32 	%f1937, %f1674;
	mov.f32 	%f1938, %f1674;
	mov.f32 	%f1939, %f1674;
	mov.f32 	%f1940, %f1674;
	mov.f32 	%f1941, %f1674;
	mov.f32 	%f1942, %f1674;
	mov.f32 	%f1943, %f1674;
	mov.f32 	%f1944, %f1674;
	mov.f32 	%f1945, %f1674;
	mov.f32 	%f1946, %f1674;
	mov.f32 	%f1947, %f1674;
	mov.f32 	%f1948, %f1674;
	mov.f32 	%f1949, %f1674;
	mov.f32 	%f1950, %f1674;
	mov.f32 	%f1951, %f1674;
	mov.f32 	%f1952, %f1674;
	mov.f32 	%f1953, %f1674;
	mov.f32 	%f1954, %f1674;
	mov.f32 	%f1955, %f1674;
	mov.f32 	%f1956, %f1674;
	mov.f32 	%f1957, %f1674;
	mov.f32 	%f1958, %f1674;
	mov.f32 	%f1959, %f1674;
	mov.f32 	%f1960, %f1674;
	mov.f32 	%f1961, %f1674;
	mov.f32 	%f1962, %f1674;
	mov.f32 	%f1963, %f1674;
	mov.f32 	%f1964, %f1674;
	mov.f32 	%f1965, %f1674;
	mov.f32 	%f1966, %f1674;
	mov.f32 	%f1967, %f1674;
	mov.f32 	%f1968, %f1674;
	mov.f32 	%f1969, %f1674;
	mov.f32 	%f1970, %f1674;
	mov.f32 	%f1971, %f1674;
	mov.f32 	%f1972, %f1674;
	mov.f32 	%f1973, %f1674;
	mov.f32 	%f1974, %f1674;
	mov.f32 	%f1975, %f1674;
	mov.f32 	%f1976, %f1674;
	mov.f32 	%f1977, %f1674;
	mov.f32 	%f1978, %f1674;
	mov.f32 	%f1979, %f1674;
	mov.f32 	%f1980, %f1674;
	mov.f32 	%f1981, %f1674;
	mov.f32 	%f1982, %f1674;
	mov.f32 	%f1983, %f1674;
	mov.f32 	%f1984, %f1674;
	mov.f32 	%f1985, %f1674;
	mov.f32 	%f1986, %f1674;
	mov.f32 	%f1987, %f1674;
	mov.f32 	%f1988, %f1674;
	mov.f32 	%f1989, %f1674;
	mov.f32 	%f1990, %f1674;
	mov.f32 	%f1991, %f1674;
	mov.f32 	%f1992, %f1674;
	mov.f32 	%f1993, %f1674;
	mov.f32 	%f1994, %f1674;
	mov.f32 	%f1995, %f1674;
	mov.f32 	%f1996, %f1674;
	mov.f32 	%f1997, %f1674;
	mov.f32 	%f1998, %f1674;
	mov.f32 	%f1999, %f1674;
	mov.f32 	%f2000, %f1674;
	mov.f32 	%f2001, %f1674;
	mov.f32 	%f2002, %f1674;
	mov.f32 	%f2003, %f1674;
	mov.f32 	%f2004, %f1674;
	mov.f32 	%f2005, %f1674;
	mov.f32 	%f2006, %f1674;
	mov.f32 	%f2007, %f1674;
	mov.f32 	%f2008, %f1674;
	mov.f32 	%f2009, %f1674;
	mov.f32 	%f2010, %f1674;
	mov.f32 	%f2011, %f1674;
	mov.f32 	%f2012, %f1674;
	mov.f32 	%f2013, %f1674;
	mov.f32 	%f2014, %f1674;
	mov.f32 	%f2015, %f1674;
	mov.f32 	%f2016, %f1674;
	mov.f32 	%f2017, %f1674;
	mov.f32 	%f2018, %f1674;
	mov.f32 	%f2019, %f1674;
	mov.f32 	%f2020, %f1674;
	mov.f32 	%f2021, %f1674;
	mov.f32 	%f2022, %f1674;
	mov.f32 	%f2023, %f1674;
	mov.f32 	%f2024, %f1674;
	mov.f32 	%f2025, %f1674;
	mov.f32 	%f2026, %f1674;
	mov.f32 	%f2027, %f1674;
	mov.f32 	%f2028, %f1674;
	mov.f32 	%f2029, %f1674;
	mov.f32 	%f2030, %f1674;
	mov.f32 	%f2031, %f1674;
	mov.f32 	%f2032, %f1674;
	mov.f32 	%f2033, %f1674;
	mov.f32 	%f2034, %f1674;
	mov.f32 	%f2035, %f1674;
	mov.f32 	%f2036, %f1674;
	mov.f32 	%f2037, %f1674;
	mov.f32 	%f2038, %f1674;
	mov.f32 	%f2039, %f1674;
	mov.f32 	%f2040, %f1674;
	mov.f32 	%f2041, %f1674;
	mov.f32 	%f2042, %f1674;
	mov.f32 	%f2043, %f1674;
	mov.f32 	%f2044, %f1674;
	mov.f32 	%f2045, %f1674;
	mov.f32 	%f2046, %f1674;
	mov.f32 	%f2047, %f1674;
	mov.f32 	%f2048, %f1674;
	mov.f32 	%f2049, %f1674;
	mov.f32 	%f2050, %f1674;
	mov.f32 	%f2051, %f1674;
	mov.f32 	%f2052, %f1674;
	mov.f32 	%f2053, %f1674;
	mov.f32 	%f2054, %f1674;
	mov.f32 	%f2055, %f1674;
	mov.f32 	%f2056, %f1674;
	mov.f32 	%f2057, %f1674;
	mov.f32 	%f2058, %f1674;
	mov.f32 	%f2059, %f1674;
	mov.f32 	%f2060, %f1674;
	mov.f32 	%f2061, %f1674;
	mov.f32 	%f2062, %f1674;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p30, %r842, %r48;
	add.s32 	%r542, %r840, 1;
	setp.lt.s32 	%p31, %r542, 3;
	selp.b32 	%r840, %r542, 0, %p31;
	.loc	1 81 20                         // matmul.py:81:20
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r543, %r840, 14;
	add.s32 	%r545, %r339, %r543;
	.loc	1 82 20                         // matmul.py:82:20
	add.s32 	%r547, %r378, %r543;
	.loc	1 74 30                         // matmul.py:74:30
	add.s32 	%r548, %r545, 32;
	.loc	1 74 41                         // matmul.py:74:41
	add.s32 	%r549, %r547, 32;
	.loc	1 74 30                         // matmul.py:74:30
	add.s32 	%r550, %r545, 64;
	.loc	1 74 41                         // matmul.py:74:41
	add.s32 	%r551, %r547, 64;
	.loc	1 74 30                         // matmul.py:74:30
	add.s32 	%r552, %r545, 96;
	.loc	1 74 41                         // matmul.py:74:41
	add.s32 	%r553, %r547, 96;
	.loc	1 74 22                         // matmul.py:74:22
	shfl.sync.idx.b32	%r554, %r3, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shr.u32 	%r555, %r545, 4;
	cvt.u64.u32 	%rd245, %r555;
	and.b64  	%rd246, %rd245, 16383;
	or.b64  	%rd189, %rd246, 4611686293372403712;
	shr.u32 	%r556, %r547, 4;
	cvt.u64.u32 	%rd247, %r556;
	and.b64  	%rd248, %rd247, 16383;
	or.b64  	%rd190, %rd248, 4611686293372403712;
	mov.pred 	%p22, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd189, %rd190, %p22, 1, 1;
	// end inline asm
	add.s64 	%rd191, %rd246, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd191, %rd190, %p22, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shr.u32 	%r557, %r548, 4;
	cvt.u64.u32 	%rd249, %r557;
	and.b64  	%rd250, %rd249, 16383;
	or.b64  	%rd193, %rd250, 4611686293372403712;
	shr.u32 	%r558, %r549, 4;
	cvt.u64.u32 	%rd251, %r558;
	and.b64  	%rd252, %rd251, 16383;
	or.b64  	%rd194, %rd252, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd193, %rd194, %p22, 1, 1;
	// end inline asm
	add.s64 	%rd195, %rd250, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd195, %rd194, %p22, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shr.u32 	%r559, %r550, 4;
	cvt.u64.u32 	%rd253, %r559;
	and.b64  	%rd254, %rd253, 16383;
	or.b64  	%rd197, %rd254, 4611686293372403712;
	shr.u32 	%r560, %r551, 4;
	cvt.u64.u32 	%rd255, %r560;
	and.b64  	%rd256, %rd255, 16383;
	or.b64  	%rd198, %rd256, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd197, %rd198, %p22, 1, 1;
	// end inline asm
	add.s64 	%rd199, %rd254, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd199, %rd198, %p22, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shr.u32 	%r561, %r552, 4;
	cvt.u64.u32 	%rd257, %r561;
	and.b64  	%rd258, %rd257, 16383;
	or.b64  	%rd201, %rd258, 4611686293372403712;
	shr.u32 	%r562, %r553, 4;
	cvt.u64.u32 	%rd259, %r562;
	and.b64  	%rd260, %rd259, 16383;
	or.b64  	%rd202, %rd260, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998}, %rd201, %rd202, %p22, 1, 1;
	// end inline asm
	add.s64 	%rd203, %rd258, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k8.f32.tf32.tf32 {%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062}, %rd203, %rd202, %p22, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 84 35                         // matmul.py:84:35
	mov.b32 	%f1539, %r545;
	mov.b32 	%f1542, %r547;
	mov.f32 	%f1544, %f1674;
	mov.f32 	%f1540, %f1674;
	mov.f32 	%f1541, %f1674;
	mov.f32 	%f1543, %f1674;
	// begin inline asm
	// wait for regs: %f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998,%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062,%f1539,%f1540,%f1541,%f1542,%f1543,%f1544
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 86 18                         // matmul.py:86:18
	add.s64 	%rd205, %rd310, %rd51;
	add.s64 	%rd206, %rd310, %rd50;
	add.s64 	%rd207, %rd310, %rd49;
	add.s64 	%rd208, %rd310, %rd48;
	add.s64 	%rd209, %rd310, %rd47;
	add.s64 	%rd210, %rd310, %rd46;
	add.s64 	%rd211, %rd310, %rd45;
	.loc	1 87 18                         // matmul.py:87:18
	add.s64 	%rd212, %rd310, %rd44;
	add.s64 	%rd213, %rd311, %rd43;
	add.s64 	%rd214, %rd311, %rd42;
	add.s64 	%rd215, %rd311, %rd41;
	add.s64 	%rd216, %rd311, %rd40;
	add.s64 	%rd217, %rd311, %rd39;
	add.s64 	%rd218, %rd311, %rd38;
	add.s64 	%rd219, %rd311, %rd37;
	add.s64 	%rd220, %rd311, %rd36;
	add.s64 	%rd221, %rd311, %rd35;
	add.s64 	%rd222, %rd311, %rd34;
	add.s64 	%rd223, %rd311, %rd33;
	add.s64 	%rd224, %rd311, %rd32;
	add.s64 	%rd225, %rd311, %rd31;
	add.s64 	%rd226, %rd311, %rd30;
	add.s64 	%rd227, %rd311, %rd29;
	add.s64 	%rd228, %rd311, %rd28;
	add.s64 	%rd229, %rd311, %rd27;
	add.s64 	%rd230, %rd311, %rd26;
	add.s64 	%rd231, %rd311, %rd25;
	add.s64 	%rd232, %rd311, %rd24;
	add.s64 	%rd233, %rd311, %rd23;
	add.s64 	%rd234, %rd311, %rd22;
	add.s64 	%rd235, %rd311, %rd21;
	add.s64 	%rd236, %rd311, %rd20;
	add.s64 	%rd237, %rd311, %rd19;
	add.s64 	%rd238, %rd311, %rd18;
	add.s64 	%rd239, %rd311, %rd17;
	add.s64 	%rd240, %rd311, %rd16;
	add.s64 	%rd241, %rd311, %rd15;
	add.s64 	%rd242, %rd311, %rd14;
	add.s64 	%rd243, %rd311, %rd13;
	.loc	1 78 22                         // matmul.py:78:22
	add.s64 	%rd244, %rd311, %rd10;
	add.s32 	%r563, %r841, 1;
	setp.lt.s32 	%p32, %r563, 3;
	selp.b32 	%r841, %r563, 0, %p32;
	.loc	1 81 51                         // matmul.py:81:51
	setp.lt.s32 	%p33, %r5, %r839;
	.loc	1 81 20                         // matmul.py:81:20
	shl.b32 	%r564, %r841, 14;
	add.s32 	%r565, %r339, %r564;
	bar.sync 	0;
	add.s32 	%r462, %r565, %r338;
	add.s32 	%r464, %r565, %r343;
	add.s32 	%r466, %r565, %r347;
	add.s32 	%r468, %r565, %r351;
	add.s32 	%r470, %r565, %r355;
	add.s32 	%r472, %r565, %r359;
	add.s32 	%r474, %r565, %r363;
	add.s32 	%r476, %r565, %r367;
	selp.b32 	%r574, 16, 0, %p33;
	selp.b32 	%r465, %r574, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r462 + 0 ], [ %rd205 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r464 + 0 ], [ %rd206 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r466 + 0 ], [ %rd207 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r468 + 0 ], [ %rd208 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r470 + 0 ], [ %rd209 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r472 + 0 ], [ %rd210 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r474 + 0 ], [ %rd211 + 0 ], 0x10, %r465;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r476 + 0 ], [ %rd212 + 0 ], 0x10, %r465;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 51                         // matmul.py:82:51
	setp.lt.s32 	%p34, %r13, %r839;
	setp.lt.s32 	%p35, %r14, %r839;
	setp.lt.s32 	%p36, %r15, %r839;
	setp.lt.s32 	%p37, %r16, %r839;
	setp.lt.s32 	%p38, %r17, %r839;
	setp.lt.s32 	%p39, %r18, %r839;
	setp.lt.s32 	%p40, %r19, %r839;
	setp.lt.s32 	%p41, %r20, %r839;
	.loc	1 82 20                         // matmul.py:82:20
	add.s32 	%r575, %r378, %r564;
	add.s32 	%r478, %r575, %r377;
	add.s32 	%r578, %r575, %r379;
	add.s32 	%r480, %r578, 144;
	add.s32 	%r482, %r578, 288;
	add.s32 	%r484, %r578, 432;
	add.s32 	%r486, %r578, 16;
	add.s32 	%r488, %r578, 128;
	add.s32 	%r490, %r578, 304;
	add.s32 	%r492, %r578, 416;
	add.s32 	%r494, %r578, 32;
	add.s32 	%r496, %r578, 176;
	add.s32 	%r498, %r578, 256;
	add.s32 	%r500, %r578, 400;
	add.s32 	%r502, %r578, 48;
	add.s32 	%r504, %r578, 160;
	add.s32 	%r506, %r578, 272;
	add.s32 	%r508, %r578, 384;
	add.s32 	%r510, %r575, %r381;
	add.s32 	%r512, %r575, %r382;
	add.s32 	%r514, %r575, %r383;
	add.s32 	%r516, %r575, %r384;
	add.s32 	%r518, %r575, %r385;
	add.s32 	%r520, %r575, %r386;
	add.s32 	%r522, %r575, %r387;
	add.s32 	%r524, %r575, %r388;
	add.s32 	%r526, %r575, %r389;
	add.s32 	%r528, %r575, %r390;
	add.s32 	%r530, %r575, %r391;
	add.s32 	%r532, %r575, %r392;
	add.s32 	%r534, %r575, %r393;
	add.s32 	%r536, %r575, %r394;
	add.s32 	%r538, %r575, %r395;
	add.s32 	%r540, %r575, %r396;
	selp.b32 	%r595, 4, 0, %p34;
	selp.b32 	%r481, %r595, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r478 + 0 ], [ %rd213 + 0 ], 0x4, %r481;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r480 + 0 ], [ %rd214 + 0 ], 0x4, %r481;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r482 + 0 ], [ %rd215 + 0 ], 0x4, %r481;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r484 + 0 ], [ %rd216 + 0 ], 0x4, %r481;
	// end inline asm
	selp.b32 	%r596, 4, 0, %p35;
	selp.b32 	%r489, %r596, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r486 + 0 ], [ %rd217 + 0 ], 0x4, %r489;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r488 + 0 ], [ %rd218 + 0 ], 0x4, %r489;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r490 + 0 ], [ %rd219 + 0 ], 0x4, %r489;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r492 + 0 ], [ %rd220 + 0 ], 0x4, %r489;
	// end inline asm
	selp.b32 	%r597, 4, 0, %p36;
	selp.b32 	%r497, %r597, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r494 + 0 ], [ %rd221 + 0 ], 0x4, %r497;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r496 + 0 ], [ %rd222 + 0 ], 0x4, %r497;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r498 + 0 ], [ %rd223 + 0 ], 0x4, %r497;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r500 + 0 ], [ %rd224 + 0 ], 0x4, %r497;
	// end inline asm
	selp.b32 	%r598, 4, 0, %p37;
	selp.b32 	%r505, %r598, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r502 + 0 ], [ %rd225 + 0 ], 0x4, %r505;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r504 + 0 ], [ %rd226 + 0 ], 0x4, %r505;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r506 + 0 ], [ %rd227 + 0 ], 0x4, %r505;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r508 + 0 ], [ %rd228 + 0 ], 0x4, %r505;
	// end inline asm
	selp.b32 	%r599, 4, 0, %p38;
	selp.b32 	%r513, %r599, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r510 + 0 ], [ %rd229 + 0 ], 0x4, %r513;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r512 + 0 ], [ %rd230 + 0 ], 0x4, %r513;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r514 + 0 ], [ %rd231 + 0 ], 0x4, %r513;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r516 + 0 ], [ %rd232 + 0 ], 0x4, %r513;
	// end inline asm
	selp.b32 	%r600, 4, 0, %p39;
	selp.b32 	%r521, %r600, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r518 + 0 ], [ %rd233 + 0 ], 0x4, %r521;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r520 + 0 ], [ %rd234 + 0 ], 0x4, %r521;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r522 + 0 ], [ %rd235 + 0 ], 0x4, %r521;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r524 + 0 ], [ %rd236 + 0 ], 0x4, %r521;
	// end inline asm
	selp.b32 	%r601, 4, 0, %p40;
	selp.b32 	%r529, %r601, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r526 + 0 ], [ %rd237 + 0 ], 0x4, %r529;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r528 + 0 ], [ %rd238 + 0 ], 0x4, %r529;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r530 + 0 ], [ %rd239 + 0 ], 0x4, %r529;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r532 + 0 ], [ %rd240 + 0 ], 0x4, %r529;
	// end inline asm
	selp.b32 	%r602, 4, 0, %p41;
	selp.b32 	%r537, %r602, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r534 + 0 ], [ %rd241 + 0 ], 0x4, %r537;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r536 + 0 ], [ %rd242 + 0 ], 0x4, %r537;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r538 + 0 ], [ %rd243 + 0 ], 0x4, %r537;
	// end inline asm
	// begin inline asm
	cp.async.ca.shared.global [ %r540 + 0 ], [ %rd244 + 0 ], 0x4, %r537;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 22                         // matmul.py:78:22
	add.s32 	%r842, %r842, 1;
	add.s64 	%rd311, %rd311, %rd12;
	add.s64 	%rd310, %rd310, 128;
	add.s32 	%r839, %r839, -32;
	setp.ne.s32 	%p42, %r21, %r842;
	@%p42 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 71 51                         // matmul.py:71:51
	shl.b32 	%r731, %r2, 3;
	and.b32  	%r732, %r731, 120;
	.loc	1 72 38                         // matmul.py:72:38
	or.b32  	%r733, %r6, %r732;
	.loc	1 71 51                         // matmul.py:71:51
	bfe.u32 	%r734, %r2, 4, 3;
	.loc	1 71 38                         // matmul.py:71:38
	or.b32  	%r735, %r734, %r1;
	or.b32  	%r736, %r735, 120;
	or.b32  	%r737, %r735, 112;
	or.b32  	%r738, %r735, 104;
	or.b32  	%r739, %r735, 96;
	or.b32  	%r740, %r735, 88;
	or.b32  	%r741, %r735, 80;
	or.b32  	%r742, %r735, 72;
	or.b32  	%r743, %r735, 64;
	or.b32  	%r744, %r735, 56;
	or.b32  	%r745, %r735, 48;
	or.b32  	%r746, %r735, 40;
	or.b32  	%r747, %r735, 32;
	or.b32  	%r748, %r735, 24;
	or.b32  	%r749, %r735, 16;
	or.b32  	%r750, %r735, 8;
	.loc	1 78 22                         // matmul.py:78:22
	// begin inline asm
	// wait for regs: %f1935,%f1936,%f1937,%f1938,%f1939,%f1940,%f1941,%f1942,%f1943,%f1944,%f1945,%f1946,%f1947,%f1948,%f1949,%f1950,%f1951,%f1952,%f1953,%f1954,%f1955,%f1956,%f1957,%f1958,%f1959,%f1960,%f1961,%f1962,%f1963,%f1964,%f1965,%f1966,%f1967,%f1968,%f1969,%f1970,%f1971,%f1972,%f1973,%f1974,%f1975,%f1976,%f1977,%f1978,%f1979,%f1980,%f1981,%f1982,%f1983,%f1984,%f1985,%f1986,%f1987,%f1988,%f1989,%f1990,%f1991,%f1992,%f1993,%f1994,%f1995,%f1996,%f1997,%f1998,%f1999,%f2000,%f2001,%f2002,%f2003,%f2004,%f2005,%f2006,%f2007,%f2008,%f2009,%f2010,%f2011,%f2012,%f2013,%f2014,%f2015,%f2016,%f2017,%f2018,%f2019,%f2020,%f2021,%f2022,%f2023,%f2024,%f2025,%f2026,%f2027,%f2028,%f2029,%f2030,%f2031,%f2032,%f2033,%f2034,%f2035,%f2036,%f2037,%f2038,%f2039,%f2040,%f2041,%f2042,%f2043,%f2044,%f2045,%f2046,%f2047,%f2048,%f2049,%f2050,%f2051,%f2052,%f2053,%f2054,%f2055,%f2056,%f2057,%f2058,%f2059,%f2060,%f2061,%f2062
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 0;
	bar.sync 	0;
	.loc	1 90 23                         // matmul.py:90:23
	cvt.rn.f16.f32 	%rs1, %f1935;
	cvt.rn.f16.f32 	%rs2, %f1936;
	cvt.rn.f16.f32 	%rs3, %f1937;
	cvt.rn.f16.f32 	%rs4, %f1938;
	cvt.rn.f16.f32 	%rs5, %f1939;
	cvt.rn.f16.f32 	%rs6, %f1940;
	cvt.rn.f16.f32 	%rs7, %f1941;
	cvt.rn.f16.f32 	%rs8, %f1942;
	cvt.rn.f16.f32 	%rs9, %f1943;
	cvt.rn.f16.f32 	%rs10, %f1944;
	cvt.rn.f16.f32 	%rs11, %f1945;
	cvt.rn.f16.f32 	%rs12, %f1946;
	cvt.rn.f16.f32 	%rs13, %f1947;
	cvt.rn.f16.f32 	%rs14, %f1948;
	cvt.rn.f16.f32 	%rs15, %f1949;
	cvt.rn.f16.f32 	%rs16, %f1950;
	cvt.rn.f16.f32 	%rs17, %f1951;
	cvt.rn.f16.f32 	%rs18, %f1952;
	cvt.rn.f16.f32 	%rs19, %f1953;
	cvt.rn.f16.f32 	%rs20, %f1954;
	cvt.rn.f16.f32 	%rs21, %f1955;
	cvt.rn.f16.f32 	%rs22, %f1956;
	cvt.rn.f16.f32 	%rs23, %f1957;
	cvt.rn.f16.f32 	%rs24, %f1958;
	cvt.rn.f16.f32 	%rs25, %f1959;
	cvt.rn.f16.f32 	%rs26, %f1960;
	cvt.rn.f16.f32 	%rs27, %f1961;
	cvt.rn.f16.f32 	%rs28, %f1962;
	cvt.rn.f16.f32 	%rs29, %f1963;
	cvt.rn.f16.f32 	%rs30, %f1964;
	cvt.rn.f16.f32 	%rs31, %f1965;
	cvt.rn.f16.f32 	%rs32, %f1966;
	cvt.rn.f16.f32 	%rs33, %f1967;
	cvt.rn.f16.f32 	%rs34, %f1968;
	cvt.rn.f16.f32 	%rs35, %f1969;
	cvt.rn.f16.f32 	%rs36, %f1970;
	cvt.rn.f16.f32 	%rs37, %f1971;
	cvt.rn.f16.f32 	%rs38, %f1972;
	cvt.rn.f16.f32 	%rs39, %f1973;
	cvt.rn.f16.f32 	%rs40, %f1974;
	cvt.rn.f16.f32 	%rs41, %f1975;
	cvt.rn.f16.f32 	%rs42, %f1976;
	cvt.rn.f16.f32 	%rs43, %f1977;
	cvt.rn.f16.f32 	%rs44, %f1978;
	cvt.rn.f16.f32 	%rs45, %f1979;
	cvt.rn.f16.f32 	%rs46, %f1980;
	cvt.rn.f16.f32 	%rs47, %f1981;
	cvt.rn.f16.f32 	%rs48, %f1982;
	cvt.rn.f16.f32 	%rs49, %f1983;
	cvt.rn.f16.f32 	%rs50, %f1984;
	cvt.rn.f16.f32 	%rs51, %f1985;
	cvt.rn.f16.f32 	%rs52, %f1986;
	cvt.rn.f16.f32 	%rs53, %f1987;
	cvt.rn.f16.f32 	%rs54, %f1988;
	cvt.rn.f16.f32 	%rs55, %f1989;
	cvt.rn.f16.f32 	%rs56, %f1990;
	cvt.rn.f16.f32 	%rs57, %f1991;
	cvt.rn.f16.f32 	%rs58, %f1992;
	cvt.rn.f16.f32 	%rs59, %f1993;
	cvt.rn.f16.f32 	%rs60, %f1994;
	cvt.rn.f16.f32 	%rs61, %f1995;
	cvt.rn.f16.f32 	%rs62, %f1996;
	cvt.rn.f16.f32 	%rs63, %f1997;
	cvt.rn.f16.f32 	%rs64, %f1998;
	cvt.rn.f16.f32 	%rs65, %f1999;
	cvt.rn.f16.f32 	%rs66, %f2000;
	cvt.rn.f16.f32 	%rs67, %f2001;
	cvt.rn.f16.f32 	%rs68, %f2002;
	cvt.rn.f16.f32 	%rs69, %f2003;
	cvt.rn.f16.f32 	%rs70, %f2004;
	cvt.rn.f16.f32 	%rs71, %f2005;
	cvt.rn.f16.f32 	%rs72, %f2006;
	cvt.rn.f16.f32 	%rs73, %f2007;
	cvt.rn.f16.f32 	%rs74, %f2008;
	cvt.rn.f16.f32 	%rs75, %f2009;
	cvt.rn.f16.f32 	%rs76, %f2010;
	cvt.rn.f16.f32 	%rs77, %f2011;
	cvt.rn.f16.f32 	%rs78, %f2012;
	cvt.rn.f16.f32 	%rs79, %f2013;
	cvt.rn.f16.f32 	%rs80, %f2014;
	cvt.rn.f16.f32 	%rs81, %f2015;
	cvt.rn.f16.f32 	%rs82, %f2016;
	cvt.rn.f16.f32 	%rs83, %f2017;
	cvt.rn.f16.f32 	%rs84, %f2018;
	cvt.rn.f16.f32 	%rs85, %f2019;
	cvt.rn.f16.f32 	%rs86, %f2020;
	cvt.rn.f16.f32 	%rs87, %f2021;
	cvt.rn.f16.f32 	%rs88, %f2022;
	cvt.rn.f16.f32 	%rs89, %f2023;
	cvt.rn.f16.f32 	%rs90, %f2024;
	cvt.rn.f16.f32 	%rs91, %f2025;
	cvt.rn.f16.f32 	%rs92, %f2026;
	cvt.rn.f16.f32 	%rs93, %f2027;
	cvt.rn.f16.f32 	%rs94, %f2028;
	cvt.rn.f16.f32 	%rs95, %f2029;
	cvt.rn.f16.f32 	%rs96, %f2030;
	cvt.rn.f16.f32 	%rs97, %f2031;
	cvt.rn.f16.f32 	%rs98, %f2032;
	cvt.rn.f16.f32 	%rs99, %f2033;
	cvt.rn.f16.f32 	%rs100, %f2034;
	cvt.rn.f16.f32 	%rs101, %f2035;
	cvt.rn.f16.f32 	%rs102, %f2036;
	cvt.rn.f16.f32 	%rs103, %f2037;
	cvt.rn.f16.f32 	%rs104, %f2038;
	cvt.rn.f16.f32 	%rs105, %f2039;
	cvt.rn.f16.f32 	%rs106, %f2040;
	cvt.rn.f16.f32 	%rs107, %f2041;
	cvt.rn.f16.f32 	%rs108, %f2042;
	cvt.rn.f16.f32 	%rs109, %f2043;
	cvt.rn.f16.f32 	%rs110, %f2044;
	cvt.rn.f16.f32 	%rs111, %f2045;
	cvt.rn.f16.f32 	%rs112, %f2046;
	cvt.rn.f16.f32 	%rs113, %f2047;
	cvt.rn.f16.f32 	%rs114, %f2048;
	cvt.rn.f16.f32 	%rs115, %f2049;
	cvt.rn.f16.f32 	%rs116, %f2050;
	cvt.rn.f16.f32 	%rs117, %f2051;
	cvt.rn.f16.f32 	%rs118, %f2052;
	cvt.rn.f16.f32 	%rs119, %f2053;
	cvt.rn.f16.f32 	%rs120, %f2054;
	cvt.rn.f16.f32 	%rs121, %f2055;
	cvt.rn.f16.f32 	%rs122, %f2056;
	cvt.rn.f16.f32 	%rs123, %f2057;
	cvt.rn.f16.f32 	%rs124, %f2058;
	cvt.rn.f16.f32 	%rs125, %f2059;
	cvt.rn.f16.f32 	%rs126, %f2060;
	cvt.rn.f16.f32 	%rs127, %f2061;
	cvt.rn.f16.f32 	%rs128, %f2062;
	.loc	1 96 33                         // matmul.py:96:33
	mul.lo.s32 	%r751, %r735, %r62;
	shl.b32 	%r752, %r62, 3;
	add.s32 	%r753, %r751, %r752;
	add.s32 	%r754, %r753, %r752;
	add.s32 	%r755, %r754, %r752;
	add.s32 	%r756, %r755, %r752;
	add.s32 	%r757, %r756, %r752;
	add.s32 	%r758, %r757, %r752;
	add.s32 	%r759, %r758, %r752;
	add.s32 	%r760, %r759, %r752;
	add.s32 	%r761, %r760, %r752;
	add.s32 	%r762, %r761, %r752;
	add.s32 	%r763, %r762, %r752;
	add.s32 	%r764, %r763, %r752;
	add.s32 	%r765, %r764, %r752;
	add.s32 	%r766, %r765, %r752;
	add.s32 	%r767, %r766, %r752;
	.loc	1 96 21                         // matmul.py:96:21
	mul.wide.s32 	%rd277, %r751, 2;
	add.s64 	%rd278, %rd58, %rd277;
	mul.wide.s32 	%rd279, %r753, 2;
	add.s64 	%rd280, %rd58, %rd279;
	mul.wide.s32 	%rd281, %r754, 2;
	add.s64 	%rd282, %rd58, %rd281;
	mul.wide.s32 	%rd283, %r755, 2;
	add.s64 	%rd284, %rd58, %rd283;
	mul.wide.s32 	%rd285, %r756, 2;
	add.s64 	%rd286, %rd58, %rd285;
	mul.wide.s32 	%rd287, %r757, 2;
	add.s64 	%rd288, %rd58, %rd287;
	mul.wide.s32 	%rd289, %r758, 2;
	add.s64 	%rd290, %rd58, %rd289;
	mul.wide.s32 	%rd291, %r759, 2;
	add.s64 	%rd292, %rd58, %rd291;
	mul.wide.s32 	%rd293, %r760, 2;
	add.s64 	%rd294, %rd58, %rd293;
	mul.wide.s32 	%rd295, %r761, 2;
	add.s64 	%rd296, %rd58, %rd295;
	mul.wide.s32 	%rd297, %r762, 2;
	add.s64 	%rd298, %rd58, %rd297;
	mul.wide.s32 	%rd299, %r763, 2;
	add.s64 	%rd300, %rd58, %rd299;
	mul.wide.s32 	%rd301, %r764, 2;
	add.s64 	%rd302, %rd58, %rd301;
	mul.wide.s32 	%rd303, %r765, 2;
	add.s64 	%rd304, %rd58, %rd303;
	mul.wide.s32 	%rd305, %r766, 2;
	add.s64 	%rd306, %rd58, %rd305;
	mul.wide.s32 	%rd307, %r767, 2;
	add.s64 	%rd308, %rd58, %rd307;
	.loc	1 96 52                         // matmul.py:96:52
	mul.wide.s32 	%rd309, %r733, 2;
	add.s64 	%rd261, %rd278, %rd309;
	add.s64 	%rd262, %rd280, %rd309;
	add.s64 	%rd263, %rd282, %rd309;
	add.s64 	%rd264, %rd284, %rd309;
	add.s64 	%rd265, %rd286, %rd309;
	add.s64 	%rd266, %rd288, %rd309;
	add.s64 	%rd267, %rd290, %rd309;
	add.s64 	%rd268, %rd292, %rd309;
	add.s64 	%rd269, %rd294, %rd309;
	add.s64 	%rd270, %rd296, %rd309;
	add.s64 	%rd271, %rd298, %rd309;
	add.s64 	%rd272, %rd300, %rd309;
	add.s64 	%rd273, %rd302, %rd309;
	add.s64 	%rd274, %rd304, %rd309;
	add.s64 	%rd275, %rd306, %rd309;
	add.s64 	%rd276, %rd308, %rd309;
	.loc	1 97 33                         // matmul.py:97:33
	setp.lt.s32 	%p123, %r735, %r58;
	setp.lt.s32 	%p124, %r750, %r58;
	setp.lt.s32 	%p125, %r749, %r58;
	setp.lt.s32 	%p126, %r748, %r58;
	setp.lt.s32 	%p127, %r747, %r58;
	setp.lt.s32 	%p128, %r746, %r58;
	setp.lt.s32 	%p129, %r745, %r58;
	setp.lt.s32 	%p130, %r744, %r58;
	setp.lt.s32 	%p131, %r743, %r58;
	setp.lt.s32 	%p132, %r742, %r58;
	setp.lt.s32 	%p133, %r741, %r58;
	setp.lt.s32 	%p134, %r740, %r58;
	setp.lt.s32 	%p135, %r739, %r58;
	setp.lt.s32 	%p136, %r738, %r58;
	setp.lt.s32 	%p137, %r737, %r58;
	setp.lt.s32 	%p138, %r736, %r58;
	.loc	1 97 58                         // matmul.py:97:58
	setp.lt.s32 	%p139, %r733, %r59;
	.loc	1 97 39                         // matmul.py:97:39
	and.pred  	%p107, %p123, %p139;
	and.pred  	%p108, %p124, %p139;
	and.pred  	%p109, %p125, %p139;
	and.pred  	%p110, %p126, %p139;
	and.pred  	%p111, %p127, %p139;
	and.pred  	%p112, %p128, %p139;
	and.pred  	%p113, %p129, %p139;
	and.pred  	%p114, %p130, %p139;
	and.pred  	%p115, %p131, %p139;
	and.pred  	%p116, %p132, %p139;
	and.pred  	%p117, %p133, %p139;
	and.pred  	%p118, %p134, %p139;
	and.pred  	%p119, %p135, %p139;
	and.pred  	%p120, %p136, %p139;
	and.pred  	%p121, %p137, %p139;
	and.pred  	%p122, %p138, %p139;
	.loc	1 98 21                         // matmul.py:98:21
	shl.b32 	%r768, %r2, 1;
	and.b32  	%r769, %r768, 6;
	shl.b32 	%r770, %r2, 5;
	and.b32  	%r771, %r770, 384;
	or.b32  	%r772, %r771, %r769;
	shl.b32 	%r773, %r4, 5;
	or.b32  	%r774, %r772, %r773;
	shl.b32 	%r775, %r2, 6;
	and.b32  	%r776, %r775, 6144;
	or.b32  	%r777, %r774, %r776;
	and.b32  	%r778, %r731, 1016;
	shr.u32 	%r779, %r777, 4;
	add.s32 	%r780, %r779, %r777;
	shl.b32 	%r781, %r780, 1;
	add.s32 	%r603, %r339, %r781;
	mov.pred 	%p43, -1;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r603 + 0 ], { %rs1, %rs2 };
	// end inline asm
	or.b32  	%r783, %r777, 1024;
	shr.u32 	%r784, %r783, 4;
	add.s32 	%r785, %r784, %r777;
	shl.b32 	%r786, %r785, 1;
	add.s32 	%r787, %r339, %r786;
	add.s32 	%r604, %r787, 2048;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r604 + 0 ], { %rs3, %rs4 };
	// end inline asm
	add.s32 	%r605, %r603, 16;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r605 + 0 ], { %rs5, %rs6 };
	// end inline asm
	add.s32 	%r606, %r787, 2064;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r606 + 0 ], { %rs7, %rs8 };
	// end inline asm
	add.s32 	%r607, %r603, 32;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r607 + 0 ], { %rs9, %rs10 };
	// end inline asm
	and.b32  	%r788, %r784, 504;
	add.s32 	%r789, %r788, %r777;
	shl.b32 	%r790, %r789, 1;
	add.s32 	%r791, %r339, %r790;
	add.s32 	%r608, %r791, 2080;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r608 + 0 ], { %rs11, %rs12 };
	// end inline asm
	add.s32 	%r609, %r603, 48;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r609 + 0 ], { %rs13, %rs14 };
	// end inline asm
	add.s32 	%r610, %r791, 2096;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r610 + 0 ], { %rs15, %rs16 };
	// end inline asm
	add.s32 	%r611, %r603, 64;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r611 + 0 ], { %rs17, %rs18 };
	// end inline asm
	add.s32 	%r612, %r791, 2112;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r612 + 0 ], { %rs19, %rs20 };
	// end inline asm
	add.s32 	%r613, %r603, 80;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r613 + 0 ], { %rs21, %rs22 };
	// end inline asm
	add.s32 	%r614, %r791, 2128;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r614 + 0 ], { %rs23, %rs24 };
	// end inline asm
	add.s32 	%r615, %r603, 96;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r615 + 0 ], { %rs25, %rs26 };
	// end inline asm
	add.s32 	%r616, %r791, 2144;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r616 + 0 ], { %rs27, %rs28 };
	// end inline asm
	add.s32 	%r617, %r603, 112;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r617 + 0 ], { %rs29, %rs30 };
	// end inline asm
	add.s32 	%r618, %r791, 2160;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r618 + 0 ], { %rs31, %rs32 };
	// end inline asm
	add.s32 	%r619, %r603, 128;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r619 + 0 ], { %rs33, %rs34 };
	// end inline asm
	add.s32 	%r620, %r791, 2176;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r620 + 0 ], { %rs35, %rs36 };
	// end inline asm
	add.s32 	%r621, %r603, 144;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r621 + 0 ], { %rs37, %rs38 };
	// end inline asm
	add.s32 	%r622, %r791, 2192;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r622 + 0 ], { %rs39, %rs40 };
	// end inline asm
	add.s32 	%r623, %r603, 160;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r623 + 0 ], { %rs41, %rs42 };
	// end inline asm
	add.s32 	%r624, %r791, 2208;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r624 + 0 ], { %rs43, %rs44 };
	// end inline asm
	add.s32 	%r625, %r603, 176;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r625 + 0 ], { %rs45, %rs46 };
	// end inline asm
	add.s32 	%r626, %r791, 2224;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r626 + 0 ], { %rs47, %rs48 };
	// end inline asm
	add.s32 	%r627, %r603, 192;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r627 + 0 ], { %rs49, %rs50 };
	// end inline asm
	add.s32 	%r628, %r791, 2240;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r628 + 0 ], { %rs51, %rs52 };
	// end inline asm
	add.s32 	%r629, %r603, 208;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r629 + 0 ], { %rs53, %rs54 };
	// end inline asm
	add.s32 	%r630, %r791, 2256;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r630 + 0 ], { %rs55, %rs56 };
	// end inline asm
	add.s32 	%r631, %r603, 224;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r631 + 0 ], { %rs57, %rs58 };
	// end inline asm
	add.s32 	%r632, %r791, 2272;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r632 + 0 ], { %rs59, %rs60 };
	// end inline asm
	add.s32 	%r633, %r603, 240;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r633 + 0 ], { %rs61, %rs62 };
	// end inline asm
	add.s32 	%r634, %r791, 2288;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r634 + 0 ], { %rs63, %rs64 };
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r792, %r2, 1;
	and.b32  	%r793, %r792, 56;
	add.s32 	%r794, %r793, %r778;
	shl.b32 	%r795, %r794, 1;
	add.s32 	%r796, %r339, %r795;
	ld.shared.v4.u32 	{%r667, %r668, %r669, %r670}, [%r796];
	or.b32  	%r797, %r778, 1024;
	shr.u32 	%r798, %r797, 4;
	and.b32  	%r799, %r798, 120;
	add.s32 	%r800, %r799, %r778;
	shl.b32 	%r801, %r800, 1;
	add.s32 	%r802, %r339, %r801;
	ld.shared.v4.u32 	{%r671, %r672, %r673, %r674}, [%r802+2048];
	or.b32  	%r803, %r778, 2048;
	shr.u32 	%r804, %r803, 4;
	and.b32  	%r805, %r804, 184;
	add.s32 	%r806, %r805, %r778;
	shl.b32 	%r807, %r806, 1;
	add.s32 	%r808, %r339, %r807;
	ld.shared.v4.u32 	{%r675, %r676, %r677, %r678}, [%r808+4096];
	or.b32  	%r809, %r778, 3072;
	shr.u32 	%r810, %r809, 4;
	and.b32  	%r811, %r810, 248;
	add.s32 	%r812, %r811, %r778;
	shl.b32 	%r813, %r812, 1;
	add.s32 	%r814, %r339, %r813;
	ld.shared.v4.u32 	{%r679, %r680, %r681, %r682}, [%r814+6144];
	or.b32  	%r815, %r778, 4096;
	shr.u32 	%r816, %r815, 4;
	and.b32  	%r817, %r816, 312;
	add.s32 	%r818, %r817, %r778;
	shl.b32 	%r819, %r818, 1;
	add.s32 	%r820, %r339, %r819;
	ld.shared.v4.u32 	{%r683, %r684, %r685, %r686}, [%r820+8192];
	or.b32  	%r821, %r778, 5120;
	shr.u32 	%r822, %r821, 4;
	and.b32  	%r823, %r822, 376;
	add.s32 	%r824, %r823, %r778;
	shl.b32 	%r825, %r824, 1;
	add.s32 	%r826, %r339, %r825;
	ld.shared.v4.u32 	{%r687, %r688, %r689, %r690}, [%r826+10240];
	or.b32  	%r827, %r778, 6144;
	shr.u32 	%r828, %r827, 4;
	and.b32  	%r829, %r828, 440;
	add.s32 	%r830, %r829, %r778;
	shl.b32 	%r831, %r830, 1;
	add.s32 	%r832, %r339, %r831;
	ld.shared.v4.u32 	{%r691, %r692, %r693, %r694}, [%r832+12288];
	or.b32  	%r833, %r778, 7168;
	shr.u32 	%r834, %r833, 4;
	and.b32  	%r835, %r834, 504;
	add.s32 	%r836, %r835, %r778;
	shl.b32 	%r837, %r836, 1;
	add.s32 	%r838, %r339, %r837;
	ld.shared.v4.u32 	{%r695, %r696, %r697, %r698}, [%r838+14336];
	bar.sync 	0;
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r603 + 0 ], { %rs65, %rs66 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r604 + 0 ], { %rs67, %rs68 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r605 + 0 ], { %rs69, %rs70 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r606 + 0 ], { %rs71, %rs72 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r607 + 0 ], { %rs73, %rs74 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r608 + 0 ], { %rs75, %rs76 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r609 + 0 ], { %rs77, %rs78 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r610 + 0 ], { %rs79, %rs80 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r611 + 0 ], { %rs81, %rs82 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r612 + 0 ], { %rs83, %rs84 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r613 + 0 ], { %rs85, %rs86 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r614 + 0 ], { %rs87, %rs88 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r615 + 0 ], { %rs89, %rs90 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r616 + 0 ], { %rs91, %rs92 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r617 + 0 ], { %rs93, %rs94 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r618 + 0 ], { %rs95, %rs96 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r619 + 0 ], { %rs97, %rs98 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r620 + 0 ], { %rs99, %rs100 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r621 + 0 ], { %rs101, %rs102 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r622 + 0 ], { %rs103, %rs104 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r623 + 0 ], { %rs105, %rs106 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r624 + 0 ], { %rs107, %rs108 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r625 + 0 ], { %rs109, %rs110 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r626 + 0 ], { %rs111, %rs112 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r627 + 0 ], { %rs113, %rs114 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r628 + 0 ], { %rs115, %rs116 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r629 + 0 ], { %rs117, %rs118 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r630 + 0 ], { %rs119, %rs120 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r631 + 0 ], { %rs121, %rs122 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r632 + 0 ], { %rs123, %rs124 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r633 + 0 ], { %rs125, %rs126 };
	// end inline asm
	// begin inline asm
	@%p43 st.shared.v2.b16 [ %r634 + 0 ], { %rs127, %rs128 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r699, %r700, %r701, %r702}, [%r796];
	ld.shared.v4.u32 	{%r703, %r704, %r705, %r706}, [%r802+2048];
	ld.shared.v4.u32 	{%r707, %r708, %r709, %r710}, [%r808+4096];
	ld.shared.v4.u32 	{%r711, %r712, %r713, %r714}, [%r814+6144];
	ld.shared.v4.u32 	{%r715, %r716, %r717, %r718}, [%r820+8192];
	ld.shared.v4.u32 	{%r719, %r720, %r721, %r722}, [%r826+10240];
	ld.shared.v4.u32 	{%r723, %r724, %r725, %r726}, [%r832+12288];
	ld.shared.v4.u32 	{%r727, %r728, %r729, %r730}, [%r838+14336];
	// begin inline asm
	@%p107 st.global.v4.b32 [ %rd261 + 0 ], { %r667, %r668, %r669, %r670 };
	// end inline asm
	// begin inline asm
	@%p108 st.global.v4.b32 [ %rd262 + 0 ], { %r671, %r672, %r673, %r674 };
	// end inline asm
	// begin inline asm
	@%p109 st.global.v4.b32 [ %rd263 + 0 ], { %r675, %r676, %r677, %r678 };
	// end inline asm
	// begin inline asm
	@%p110 st.global.v4.b32 [ %rd264 + 0 ], { %r679, %r680, %r681, %r682 };
	// end inline asm
	// begin inline asm
	@%p111 st.global.v4.b32 [ %rd265 + 0 ], { %r683, %r684, %r685, %r686 };
	// end inline asm
	// begin inline asm
	@%p112 st.global.v4.b32 [ %rd266 + 0 ], { %r687, %r688, %r689, %r690 };
	// end inline asm
	// begin inline asm
	@%p113 st.global.v4.b32 [ %rd267 + 0 ], { %r691, %r692, %r693, %r694 };
	// end inline asm
	// begin inline asm
	@%p114 st.global.v4.b32 [ %rd268 + 0 ], { %r695, %r696, %r697, %r698 };
	// end inline asm
	// begin inline asm
	@%p115 st.global.v4.b32 [ %rd269 + 0 ], { %r699, %r700, %r701, %r702 };
	// end inline asm
	// begin inline asm
	@%p116 st.global.v4.b32 [ %rd270 + 0 ], { %r703, %r704, %r705, %r706 };
	// end inline asm
	// begin inline asm
	@%p117 st.global.v4.b32 [ %rd271 + 0 ], { %r707, %r708, %r709, %r710 };
	// end inline asm
	// begin inline asm
	@%p118 st.global.v4.b32 [ %rd272 + 0 ], { %r711, %r712, %r713, %r714 };
	// end inline asm
	// begin inline asm
	@%p119 st.global.v4.b32 [ %rd273 + 0 ], { %r715, %r716, %r717, %r718 };
	// end inline asm
	// begin inline asm
	@%p120 st.global.v4.b32 [ %rd274 + 0 ], { %r719, %r720, %r721, %r722 };
	// end inline asm
	// begin inline asm
	@%p121 st.global.v4.b32 [ %rd275 + 0 ], { %r723, %r724, %r725, %r726 };
	// end inline asm
	// begin inline asm
	@%p122 st.global.v4.b32 [ %rd276 + 0 ], { %r727, %r728, %r729, %r730 };
	// end inline asm
	.loc	1 98 4                          // matmul.py:98:4
	ret;
$L__tmp6:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/scratch/projects/triton-gg/reproducer/float32-K32/./matmul.py"
	.file	2 "/scratch/projects/triton/triton-by/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 195                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbc DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 115
.b8 99
.b8 114
.b8 97
.b8 116
.b8 99
.b8 104
.b8 47
.b8 112
.b8 114
.b8 111
.b8 106
.b8 101
.b8 99
.b8 116
.b8 115
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 45
.b8 103
.b8 103
.b8 47
.b8 114
.b8 101
.b8 112
.b8 114
.b8 111
.b8 100
.b8 117
.b8 99
.b8 101
.b8 114
.b8 47
.b8 102
.b8 108
.b8 111
.b8 97
.b8 116
.b8 51
.b8 50
.b8 45
.b8 75
.b8 51
.b8 50
.b8 47
.b8 46
.b8 0
.b8 2                                   // Abbrev [2] 0x58:0x10 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x68:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 88                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x7d:0x18 DW_TAG_inlined_subroutine
.b32 88                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x95:0x18 DW_TAG_inlined_subroutine
.b32 88                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xad:0x18 DW_TAG_inlined_subroutine
.b32 88                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 78                                  // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
